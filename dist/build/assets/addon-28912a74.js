function f(t,e,a,r,o,l,m,d){var s=typeof t=="function"?t.options:t;e&&(s.render=e,s.staticRenderFns=a,s._compiled=!0),r&&(s.functional=!0),l&&(s._scopeId="data-v-"+l);var n;if(m?(n=function(i){i=i||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,!i&&typeof __VUE_SSR_CONTEXT__<"u"&&(i=__VUE_SSR_CONTEXT__),o&&o.call(this,i),i&&i._registeredComponents&&i._registeredComponents.add(m)},s._ssrRegister=n):o&&(n=d?function(){o.call(this,(s.functional?this.parent:this).$root.$options.shadowRoot)}:o),n)if(s.functional){s._injectStyles=n;var c=s.render;s.render=function(u,p){return n.call(p),c(u,p)}}else{var h=s.beforeCreate;s.beforeCreate=h?[].concat(h,n):[n]}return{exports:t,options:s}}const g={mixins:[Fieldtype],data(){return{lat:null,lng:null,markerLat:null,markerLng:null,zoom:null,type:null,style:null,map:null,marker:null,hasMarker:!1,stylesExpanded:!1,behavior:null,ui:null,geocoder:null,location:null}},watch:{lat(){this.saveLocation()},lng(){this.saveLocation()},markerLat(){this.saveLocation()},markerLng(){this.saveLocation()},zoom(){this.saveLocation()},type(){this.saveLocation()},style(){this.saveLocation()}},computed:{hasGeocoder(){return this.config.geocoder},canReset(){return this.meta.defaultLat&&this.meta.defaultLng},mapHasChanged(){return this.lat!=this.meta.defaultLat||this.lng!=this.meta.defaultLng||this.zoom!=this.config.initialZoom||this.type!=this.config.mapType},hasGeolocation(){return navigator.geolocation||!1}},mounted(){this.lat=this.value.lat||this.meta.defaultLat,this.lng=this.value.lng||this.meta.defaultLng,this.markerLat=this.value.markerLat,this.markerLng=this.value.markerLng,this.zoom=this.value.zoom||this.config.initialZoom||16,this.type=this.config.mapType||"normal.map",this.style=this.value.style;const t=new H.service.Platform({apikey:this.meta.apiKey}),e=t.createDefaultLayers();this.map=new H.Map(this.$refs.map,this.determineMapType(e),{center:{lat:Number.parseFloat(this.lat),lng:Number.parseFloat(this.lng)},zoom:Number(this.zoom),pixelRatio:window.devicePixelRatio||1}),window.addEventListener("resize",()=>this.map.getViewPort().resize()),this.behavior=new H.mapevents.Behavior(new H.mapevents.MapEvents(this.map)),this.ui=H.ui.UI.createDefault(this.map,e,"en-US"),this.ui.getControl("mapsettings").setVisibility(!1),this.config.markers&&this.markerLat&&this.markerLng&&this.addMarker({lat:Number.parseFloat(this.markerLat),lng:Number.parseFloat(this.markerLng)}),this.config.geocoder&&(this.geocoder=t.getSearchService()),this.addMapListeners()},methods:{addMapListeners(){this.map.addEventListener("mapviewchangeend",(t,e,a)=>{this.zoom=this.map.getZoom(),this.lat=this.map.getCenter().lat,this.lng=this.map.getCenter().lng})},addMarker(t){this.marker=new H.map.Marker(t),this.marker.draggable=!0,this.map.addObject(this.marker),this.map.addEventListener("dragstart",this.markerDragStartHandler,!1),this.map.addEventListener("dragend",this.markerDragEndHandler,!1),this.map.addEventListener("drag",this.markerDragHandler,!1),this.markerLat=t.lat,this.markerLng=t.lng,this.hasMarker=!0},removeMarker(){this.hasMarker&&(this.map.removeEventListener("dragstart",this.markerDragStartHandler,!1),this.map.removeEventListener("dragend",this.markerDragEndHandler,!1),this.map.removeEventListener("drag",this.markerDragHandler,!1),this.map.removeObject(this.marker),this.marker=null,this.markerLat=null,this.markerLng=null,this.hasMarker=!1)},resetMap(){this.map.setCenter({lat:Number.parseFloat(this.meta.defaultLat),lng:Number.parseFloat(this.meta.defaultLng)}),this.map.setZoom(Number(this.meta.defaultZoom)||16),this.removeMarker()},saveLocation(){this.update({lat:this.lat,lng:this.lng,markerLat:this.markerLat,markerLng:this.markerLng,zoom:this.zoom,type:this.type,style:this.style})},findPosition(){this.geocoder.geocode({q:this.location},t=>{if(t.items.length>0){this.$toast.success("Location found");let e=t.items[0].position;this.map.setCenter(e),this.addMarker(e)}else this.$toast.error("Location not found")})},findUserPosition(){navigator.geolocation&&navigator.geolocation.getCurrentPosition(t=>{const e={lat:t.coords.latitude,lng:t.coords.longitude};this.map.setCenter(e)},()=>{console.debug("Error getting user position")})},determineMapType(t){return this.config.mapType==="normal.map"?t.raster.normal.map:this.config.mapType==="normal.mapnight"?t.raster.normal.mapnight:this.config.mapType==="normal.base"?t.raster.normal.base:this.config.mapType==="normal.basenight"?t.raster.normal.basenight:this.config.mapType==="satellite.map"?t.raster.satellite.map:this.config.mapType==="satellite.base"?t.raster.satellite.base:this.config.mapType==="terrain.map"?t.raster.terrain.map:this.config.mapType==="terrain.base"?t.raster.terrain.base:t.raster.normal.map},markerDragStartHandler(t){let e=t.target,a=t.currentPointer;if(e instanceof H.map.Marker){let r=this.map.geoToScreen(e.getGeometry());e.offset=new H.math.Point(a.viewportX-r.x,a.viewportY-r.y),this.behavior.disable()}},markerDragEndHandler(t){let e=t.target;e instanceof H.map.Marker&&(this.behavior.enable(),this.markerLat=e.getGeometry().lat,this.markerLng=e.getGeometry().lng)},markerDragHandler(t){let e=t.target,a=t.currentPointer;e instanceof H.map.Marker&&e.setGeometry(this.map.screenToGeo(a.viewportX-e.offset.x,a.viewportY-e.offset.y))}}};var v=function(){var e=this,a=e._self._c;return a("div",[e.hasGeocoder?a("input",{directives:[{name:"model",rawName:"v-model",value:e.location,expression:"location"}],staticClass:"input-text",attrs:{type:"text",placeholder:"Search location"},domProps:{value:e.location},on:{keyup:function(r){return!r.type.indexOf("key")&&e._k(r.keyCode,"enter",13,r.key,"Enter")?null:e.findPosition.apply(null,arguments)},input:function(r){r.target.composing||(e.location=r.target.value)}}}):e._e(),a("div",{ref:"map",staticClass:"w-full h-96"}),a("div",{staticClass:"flex justify-between"},[a("div",{staticClass:"flex items-center gap-2"},[e.hasMarker?a("a",{staticClass:"!text-red-400 text-xs",attrs:{href:"#"},on:{click:function(r){return r.preventDefault(),e.removeMarker.apply(null,arguments)}}},[e._v("[x] Remove marker")]):e.config.markers?a("a",{staticClass:"text-xs",attrs:{href:"#"},on:{click:function(r){r.preventDefault(),e.addMarker(e.map.getCenter())}}},[e._v("[+] Add marker")]):e._e(),a("a",{staticClass:"!text-red-400 text-xs",attrs:{href:"#"},on:{click:function(r){return r.preventDefault(),e.findUserPosition.apply(null,arguments)}}},[e._v("[*] Find my position")])]),a("div",[e.canReset&&e.mapHasChanged?a("a",{staticClass:"!text-red-400 text-xs",attrs:{href:"#"},on:{click:function(r){return r.preventDefault(),e.resetMap.apply(null,arguments)}}},[e._v("[-] Reset map")]):e._e()])]),this.meta.pro?a("div",{staticClass:"my-2"},[a("div",{directives:[{name:"show",rawName:"v-show",value:e.stylesExpanded,expression:"stylesExpanded"}]},[e._m(0),a("textarea-input",{model:{value:e.style,callback:function(r){e.style=r},expression:"style"}}),e._m(1),a("button",{staticClass:"btn mt-2",on:{click:function(r){r.preventDefault(),e.stylesExpanded=!1}}},[e._v("Hide styles")])],1),a("button",{directives:[{name:"show",rawName:"v-show",value:!e.stylesExpanded,expression:"!stylesExpanded"}],staticClass:"btn",on:{click:function(r){r.preventDefault(),e.stylesExpanded=!0}}},[e._v("Show styles")])]):e._e()])},k=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"help-block"},[e("p",[t._v("Paste in the link to the JSON file.")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"text-gray-600 text-xs"},[t._v("Need help? Check out the "),e("a",{attrs:{href:"https://platform.here.com/style-editor/",target:"_blank"}},[t._v("style editor")]),t._v(".")])}],y=f(g,v,k,!1,null,null,null,null);const _=y.exports;Statamic.booting(()=>{Statamic.$components.register("here_maps-fieldtype",_)});
